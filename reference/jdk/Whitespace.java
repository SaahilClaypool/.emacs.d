_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public void translate(ClassGenerator classGen, MethodGenerator methodGen) {

    /**
     * This method should not produce any code
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public Type typeCheck(SymbolTable stable) throws TypeCheckError {

    /**
     * Type-check contents/attributes - nothing to do...
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static int partition(Vector rules, int p, int r) {

    /**
     * Used with quicksort method above
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static void quicksort(Vector rules, int p, int r) {

    /**
     * Sorts a range of rules with regard to PRIORITY only
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public static int translateRules(Vector rules,
                                     ClassGenerator classGen) {

    /**
     * Takes a vector of WhitespaceRule objects and generates a predicate
     * method. This method returns the translets default action for handling
     * whitespace text-nodes:
     *    - USE_PREDICATE  (run the method generated by this method)
     *    - STRIP_SPACE    (always strip whitespace text-nodes)
     *    - PRESERVE_SPACE (always preserve whitespace text-nodes)
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static void compileDefault(int defaultAction,
                                       ClassGenerator classGen) {

    /**
     * Compiles the predicate method
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static void compilePredicate(Vector rules,
                                         int defaultAction,
                                         ClassGenerator classGen) {

    /**
     * Compiles the predicate method
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static int prioritizeRules(Vector rules) {

    /**
     * Orders a set or rules by priority, removes redundant rules and rules
     * that are shadowed by stronger, contradicting rules.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static WhitespaceRule findContradictingRule(Vector rules,
                                                        WhitespaceRule rule) {

    /**
     * Scans through the rules vector and looks for a rule of higher
     * priority that contradicts the current rule.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public Vector getRules() {

    /**
     * De-tokenize the elements listed in the 'elements' attribute and
     * instanciate a set of strip/preserve rules.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public void parseContents(Parser parser) {

    /**
     * Parse the attributes of the xsl:strip/preserve-space element.
     * The element should have not contents (ignored if any).
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
        public int compareTo(WhitespaceRule other) {

        /**
         * For sorting rules depending on priority
         */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
        public WhitespaceRule(int action, String element, int precedence) {

        /**
         * Strip/preserve rule constructor
         */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private final static class WhitespaceRule {

    /**
     * Auxillary class for encapsulating a single strip/preserve rule
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
final class Whitespace extends TopLevelElement {

/**
 * @author Morten Jorgensen
 */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public void translate(ClassGenerator classGen, MethodGenerator methodGen) {

    /**
     * This method should not produce any code
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public Type typeCheck(SymbolTable stable) throws TypeCheckError {

    /**
     * Type-check contents/attributes - nothing to do...
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static int partition(Vector rules, int p, int r) {

    /**
     * Used with quicksort method above
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static void quicksort(Vector rules, int p, int r) {

    /**
     * Sorts a range of rules with regard to PRIORITY only
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public static int translateRules(Vector rules,
                                     ClassGenerator classGen) {

    /**
     * Takes a vector of WhitespaceRule objects and generates a predicate
     * method. This method returns the translets default action for handling
     * whitespace text-nodes:
     *    - USE_PREDICATE  (run the method generated by this method)
     *    - STRIP_SPACE    (always strip whitespace text-nodes)
     *    - PRESERVE_SPACE (always preserve whitespace text-nodes)
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static void compileDefault(int defaultAction,
                                       ClassGenerator classGen) {

    /**
     * Compiles the predicate method
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static void compilePredicate(Vector rules,
                                         int defaultAction,
                                         ClassGenerator classGen) {

    /**
     * Compiles the predicate method
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static int prioritizeRules(Vector rules) {

    /**
     * Orders a set or rules by priority, removes redundant rules and rules
     * that are shadowed by stronger, contradicting rules.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private static WhitespaceRule findContradictingRule(Vector rules,
                                                        WhitespaceRule rule) {

    /**
     * Scans through the rules vector and looks for a rule of higher
     * priority that contradicts the current rule.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public Vector getRules() {

    /**
     * De-tokenize the elements listed in the 'elements' attribute and
     * instanciate a set of strip/preserve rules.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    public void parseContents(Parser parser) {

    /**
     * Parse the attributes of the xsl:strip/preserve-space element.
     * The element should have not contents (ignored if any).
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
        public int compareTo(WhitespaceRule other) {

        /**
         * For sorting rules depending on priority
         */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
        public WhitespaceRule(int action, String element, int precedence) {

        /**
         * Strip/preserve rule constructor
         */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
    private final static class WhitespaceRule {

    /**
     * Auxillary class for encapsulating a single strip/preserve rule
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/org/apache/xalan/internal/xsltc/compiler/Whitespace.java
final class Whitespace extends TopLevelElement {

/**
 * @author Morten Jorgensen
 */
