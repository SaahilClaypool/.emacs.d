_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    void checkGetAccess(long id, Object data)

    /**
     * Check the access rights for a GET operation.
     *
     * @param id The OID arc identifying the variable for which the SET is
     *           requested.
     * @param data A contextual object containing user-data.
     *           This object is allocated through the <code>
     *           {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
     *           for each incoming SNMP request.
     * @exception SnmpStatusException if the SET operation must be rejected.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    void checkSetAccess(SnmpValue x, long id, Object data)

    /**
     * Check the access rights for a SET operation.
     *
     * @param x  The new requested value.
     * @param id The OID arc identifying the variable for which the SET is
     *           requested.
     * @param data A contextual object containing user-data.
     *           This object is allocated through the <code>
     *           {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
     *           for each incoming SNMP request.
     * @exception SnmpStatusException if the SET operation must be rejected.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    String getAttributeName(long id)

    /**
     * Return the name of the attribute corresponding to the
     * SNMP variable identified by the given <code>id</code>.
     *
     * @param id The OID arc identifying the variable.
     *
     * @return The name of the variable identified by the given
     *         <code>id</code>.
     *
     * @exception SnmpStatusException if the given <code>id</code> does not
     *            correspond to a known variable.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    SnmpValue buildSnmpValue(long id, Object value)

    /**
     * Construct an SnmpValue from an Attribute value as returned by
     * Attribute::getValue().
     *
     * @param id The OID arc identifying the variable for which the
     *           value is constructed.
     * @param value The attribute value as returned by Attribute::getValue().
     *
     * @return The SnmpValue built from the given <code>value</code>.
     * @exception SnmpStatusException if the SnmpValue cannot be built from
     *            the given <code>value</code>.
     **/
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    Object buildAttributeValue(long id, SnmpValue value)

    /**
     * Construct an attribute value (as returned by Attribute::getValue())
     * from an SnmpValue. The returned attribute value can be used to
     * construct an Attribute object.
     *
     * @param id The OID arc identifying the variable for which the
     *           value is constructed.
     * @param value The SnmpValue from which the Attribute::value will be
     *              constructed.
     * @return The attribute value built from the given <code>value</code>.
     * @exception SnmpStatusException if the attribute value cannot be built
     *            from the given SnmpValue <code>value</code>.
     *
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
public interface SnmpGenericMetaServer {

/**
 * <p>
 * This interface defines the methods that must be implemented by an
 * SNMP metadata object that needs to interact with an
 * {@link com.sun.jmx.snmp.agent.SnmpGenericObjectServer} object.
 * </p>
 *
 * <p>
 * All these methods are usually generated by <code>mibgen</code> when
 * run in generic-metadata mode.
 * </p>
 *
 * <p><b><i>
 * This interface is used internally between the generated Metadata and
 * the SNMP runtime and you shouldn't need to worry about it, because
 * you will never have to use it directly.
 * </b></i></p>
 *
 * <p><b>This API is a Sun Microsystems internal API  and is subject
 * to change without notice.</b></p>
 **/
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    void checkGetAccess(long id, Object data)

    /**
     * Check the access rights for a GET operation.
     *
     * @param id The OID arc identifying the variable for which the SET is
     *           requested.
     * @param data A contextual object containing user-data.
     *           This object is allocated through the <code>
     *           {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
     *           for each incoming SNMP request.
     * @exception SnmpStatusException if the SET operation must be rejected.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    void checkSetAccess(SnmpValue x, long id, Object data)

    /**
     * Check the access rights for a SET operation.
     *
     * @param x  The new requested value.
     * @param id The OID arc identifying the variable for which the SET is
     *           requested.
     * @param data A contextual object containing user-data.
     *           This object is allocated through the <code>
     *           {@link com.sun.jmx.snmp.agent.SnmpUserDataFactory}</code>
     *           for each incoming SNMP request.
     * @exception SnmpStatusException if the SET operation must be rejected.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    String getAttributeName(long id)

    /**
     * Return the name of the attribute corresponding to the
     * SNMP variable identified by the given <code>id</code>.
     *
     * @param id The OID arc identifying the variable.
     *
     * @return The name of the variable identified by the given
     *         <code>id</code>.
     *
     * @exception SnmpStatusException if the given <code>id</code> does not
     *            correspond to a known variable.
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    SnmpValue buildSnmpValue(long id, Object value)

    /**
     * Construct an SnmpValue from an Attribute value as returned by
     * Attribute::getValue().
     *
     * @param id The OID arc identifying the variable for which the
     *           value is constructed.
     * @param value The attribute value as returned by Attribute::getValue().
     *
     * @return The SnmpValue built from the given <code>value</code>.
     * @exception SnmpStatusException if the SnmpValue cannot be built from
     *            the given <code>value</code>.
     **/
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
    Object buildAttributeValue(long id, SnmpValue value)

    /**
     * Construct an attribute value (as returned by Attribute::getValue())
     * from an SnmpValue. The returned attribute value can be used to
     * construct an Attribute object.
     *
     * @param id The OID arc identifying the variable for which the
     *           value is constructed.
     * @param value The SnmpValue from which the Attribute::value will be
     *              constructed.
     * @return The attribute value built from the given <code>value</code>.
     * @exception SnmpStatusException if the attribute value cannot be built
     *            from the given SnmpValue <code>value</code>.
     *
     */
_func_
jdk
c:/Users/saahil claypool/Documents/JDKSource//com/sun/jmx/snmp/agent/SnmpGenericMetaServer.java
public interface SnmpGenericMetaServer {

/**
 * <p>
 * This interface defines the methods that must be implemented by an
 * SNMP metadata object that needs to interact with an
 * {@link com.sun.jmx.snmp.agent.SnmpGenericObjectServer} object.
 * </p>
 *
 * <p>
 * All these methods are usually generated by <code>mibgen</code> when
 * run in generic-metadata mode.
 * </p>
 *
 * <p><b><i>
 * This interface is used internally between the generated Metadata and
 * the SNMP runtime and you shouldn't need to worry about it, because
 * you will never have to use it directly.
 * </b></i></p>
 *
 * <p><b>This API is a Sun Microsystems internal API  and is subject
 * to change without notice.</b></p>
 **/
